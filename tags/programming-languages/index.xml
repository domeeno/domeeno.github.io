<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming-Languages on Dominic Flocea</title>
    <link>https://domeeno.github.io/tags/programming-languages/</link>
    <description>Recent content in Programming-Languages on Dominic Flocea</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 May 2023 16:53:30 +0300</lastBuildDate>
    <atom:link href="https://domeeno.github.io/tags/programming-languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üåø Kotlin: No IF-ELSE statement?!</title>
      <link>https://domeeno.github.io/posts/kotlin-expressions/</link>
      <pubDate>Fri, 19 May 2023 16:53:30 +0300</pubDate>
      <guid>https://domeeno.github.io/posts/kotlin-expressions/</guid>
      <description>&lt;/br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#-statements&#34;&gt;üìú Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#-expressions&#34;&gt;üßÆ Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#-the-importance-of-the-expression-vs-statement-distinction&#34;&gt;üßò The importance of the Expression vs Statement distinction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#-conclusion&#34;&gt;üìù Conclusion&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#-buy-me-a-coffee&#34;&gt;‚òï Buy me a coffee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;p&gt;This post highlights the great practice of programming languages that are &lt;strong&gt;expressive&lt;/strong&gt; and how they avoid the design flaw of &lt;strong&gt;statements&lt;/strong&gt; used in languages like &lt;strong&gt;Java&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; and &lt;strong&gt;GO&lt;/strong&gt;. It gives a deeper meaning to the everyday &lt;code&gt;if&lt;/code&gt; code you are so used to writing by now.&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;In Kotlin there are no &lt;code&gt;if&lt;/code&gt; statements. And there&amp;rsquo;s a good reason why. &lt;strong&gt;Kotlin&lt;/strong&gt; is a functional expressive language, and that&amp;rsquo;s why &lt;code&gt;if&lt;/code&gt; is treated as an &lt;em&gt;&lt;strong&gt;expression&lt;/strong&gt;&lt;/em&gt; instead of a statement. Inspired by languages like &lt;strong&gt;Haskell&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt; and the beloved &lt;strong&gt;Rust&lt;/strong&gt; they all have in common that they treat their &lt;code&gt;if&lt;/code&gt;s as expressions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Practical Kotlin Intro: Pragmatism lvl. 80</title>
      <link>https://domeeno.github.io/posts/kotlin-intro/</link>
      <pubDate>Sat, 13 May 2023 13:15:42 +0300</pubDate>
      <guid>https://domeeno.github.io/posts/kotlin-intro/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#best-features&#34;&gt;Best Features:&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#--concise-write-less-do-more&#34;&gt;- Concise: Write less, do more.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#--versatile-swiss-army-knife-of-languages&#34;&gt;- Versatile: Swiss-Army Knife of Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#--performance-coroutines-and-reactive-programming&#34;&gt;- Performance: Coroutines and Reactive Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#--conclusion-final-thoughts-and-thanks&#34;&gt;- Conclusion, final thoughts and thanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#buy-me-a-coffee&#34;&gt;Buy me a coffee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kotlin has experienced an immense growth in popularity, and it&amp;rsquo;s easy to see why. You will personally love the language and its features; by the end, you will want to advocate for it too.&lt;/p&gt;
&lt;p&gt;I am not planning to stop using it in my future projects because I love writing Kotlin, and I want to share what I love most about it and try to convince those who haven&amp;rsquo;t tried it to do so after reading this article.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
